// Generated by view binder compiler. Do not edit!
package com.example.bot2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.bot2.R;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final TextView TubbyTv;

  @NonNull
  public final TextView binStatusTv;

  @NonNull
  public final Guideline bottomGuideline;

  @NonNull
  public final TextView chargingTv;

  @NonNull
  public final LottieAnimationView chargingView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final AppCompatImageButton drawerIconBtn;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final RecyclerView drawerRv;

  @NonNull
  public final Guideline endGuideline;

  @NonNull
  public final Guideline footerGuideline;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final Guideline headerGuideline;

  @NonNull
  public final NavigationView navigationView;

  @NonNull
  public final AppCompatImageButton powerBtn;

  @NonNull
  public final CardView powerBtnCard;

  @NonNull
  public final AppCompatImageButton profileIconBtn;

  @NonNull
  public final AppCompatImageButton scheduleBtn;

  @NonNull
  public final CardView scheduleBtnCard;

  @NonNull
  public final AppCompatImageButton settingBtn;

  @NonNull
  public final CardView settingBtnCard;

  @NonNull
  public final Guideline startGuideline;

  @NonNull
  public final Guideline topBarGuideline;

  @NonNull
  public final Guideline topGuideline;

  @NonNull
  public final Guideline topHalfGuideline;

  private ActivityMainBinding(@NonNull DrawerLayout rootView, @NonNull TextView TubbyTv,
      @NonNull TextView binStatusTv, @NonNull Guideline bottomGuideline,
      @NonNull TextView chargingTv, @NonNull LottieAnimationView chargingView,
      @NonNull ConstraintLayout constraintLayout, @NonNull AppCompatImageButton drawerIconBtn,
      @NonNull DrawerLayout drawerLayout, @NonNull RecyclerView drawerRv,
      @NonNull Guideline endGuideline, @NonNull Guideline footerGuideline,
      @NonNull FrameLayout frameLayout, @NonNull Guideline headerGuideline,
      @NonNull NavigationView navigationView, @NonNull AppCompatImageButton powerBtn,
      @NonNull CardView powerBtnCard, @NonNull AppCompatImageButton profileIconBtn,
      @NonNull AppCompatImageButton scheduleBtn, @NonNull CardView scheduleBtnCard,
      @NonNull AppCompatImageButton settingBtn, @NonNull CardView settingBtnCard,
      @NonNull Guideline startGuideline, @NonNull Guideline topBarGuideline,
      @NonNull Guideline topGuideline, @NonNull Guideline topHalfGuideline) {
    this.rootView = rootView;
    this.TubbyTv = TubbyTv;
    this.binStatusTv = binStatusTv;
    this.bottomGuideline = bottomGuideline;
    this.chargingTv = chargingTv;
    this.chargingView = chargingView;
    this.constraintLayout = constraintLayout;
    this.drawerIconBtn = drawerIconBtn;
    this.drawerLayout = drawerLayout;
    this.drawerRv = drawerRv;
    this.endGuideline = endGuideline;
    this.footerGuideline = footerGuideline;
    this.frameLayout = frameLayout;
    this.headerGuideline = headerGuideline;
    this.navigationView = navigationView;
    this.powerBtn = powerBtn;
    this.powerBtnCard = powerBtnCard;
    this.profileIconBtn = profileIconBtn;
    this.scheduleBtn = scheduleBtn;
    this.scheduleBtnCard = scheduleBtnCard;
    this.settingBtn = settingBtn;
    this.settingBtnCard = settingBtnCard;
    this.startGuideline = startGuideline;
    this.topBarGuideline = topBarGuideline;
    this.topGuideline = topGuideline;
    this.topHalfGuideline = topHalfGuideline;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Tubby_tv;
      TextView TubbyTv = ViewBindings.findChildViewById(rootView, id);
      if (TubbyTv == null) {
        break missingId;
      }

      id = R.id.bin_status_tv;
      TextView binStatusTv = ViewBindings.findChildViewById(rootView, id);
      if (binStatusTv == null) {
        break missingId;
      }

      id = R.id.bottom_guideline;
      Guideline bottomGuideline = ViewBindings.findChildViewById(rootView, id);
      if (bottomGuideline == null) {
        break missingId;
      }

      id = R.id.charging_tv;
      TextView chargingTv = ViewBindings.findChildViewById(rootView, id);
      if (chargingTv == null) {
        break missingId;
      }

      id = R.id.charging_view;
      LottieAnimationView chargingView = ViewBindings.findChildViewById(rootView, id);
      if (chargingView == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.drawer_icon_btn;
      AppCompatImageButton drawerIconBtn = ViewBindings.findChildViewById(rootView, id);
      if (drawerIconBtn == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.drawer_rv;
      RecyclerView drawerRv = ViewBindings.findChildViewById(rootView, id);
      if (drawerRv == null) {
        break missingId;
      }

      id = R.id.end_guideline;
      Guideline endGuideline = ViewBindings.findChildViewById(rootView, id);
      if (endGuideline == null) {
        break missingId;
      }

      id = R.id.footer_guideline;
      Guideline footerGuideline = ViewBindings.findChildViewById(rootView, id);
      if (footerGuideline == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.header_guideline;
      Guideline headerGuideline = ViewBindings.findChildViewById(rootView, id);
      if (headerGuideline == null) {
        break missingId;
      }

      id = R.id.navigationView;
      NavigationView navigationView = ViewBindings.findChildViewById(rootView, id);
      if (navigationView == null) {
        break missingId;
      }

      id = R.id.power_btn;
      AppCompatImageButton powerBtn = ViewBindings.findChildViewById(rootView, id);
      if (powerBtn == null) {
        break missingId;
      }

      id = R.id.power_btn_card;
      CardView powerBtnCard = ViewBindings.findChildViewById(rootView, id);
      if (powerBtnCard == null) {
        break missingId;
      }

      id = R.id.profile_icon_btn;
      AppCompatImageButton profileIconBtn = ViewBindings.findChildViewById(rootView, id);
      if (profileIconBtn == null) {
        break missingId;
      }

      id = R.id.schedule_btn;
      AppCompatImageButton scheduleBtn = ViewBindings.findChildViewById(rootView, id);
      if (scheduleBtn == null) {
        break missingId;
      }

      id = R.id.schedule_btn_card;
      CardView scheduleBtnCard = ViewBindings.findChildViewById(rootView, id);
      if (scheduleBtnCard == null) {
        break missingId;
      }

      id = R.id.setting_btn;
      AppCompatImageButton settingBtn = ViewBindings.findChildViewById(rootView, id);
      if (settingBtn == null) {
        break missingId;
      }

      id = R.id.setting_btn_card;
      CardView settingBtnCard = ViewBindings.findChildViewById(rootView, id);
      if (settingBtnCard == null) {
        break missingId;
      }

      id = R.id.start_guideline;
      Guideline startGuideline = ViewBindings.findChildViewById(rootView, id);
      if (startGuideline == null) {
        break missingId;
      }

      id = R.id.top_bar_guideline;
      Guideline topBarGuideline = ViewBindings.findChildViewById(rootView, id);
      if (topBarGuideline == null) {
        break missingId;
      }

      id = R.id.top_guideline;
      Guideline topGuideline = ViewBindings.findChildViewById(rootView, id);
      if (topGuideline == null) {
        break missingId;
      }

      id = R.id.top_half_guideline;
      Guideline topHalfGuideline = ViewBindings.findChildViewById(rootView, id);
      if (topHalfGuideline == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, TubbyTv, binStatusTv, bottomGuideline,
          chargingTv, chargingView, constraintLayout, drawerIconBtn, drawerLayout, drawerRv,
          endGuideline, footerGuideline, frameLayout, headerGuideline, navigationView, powerBtn,
          powerBtnCard, profileIconBtn, scheduleBtn, scheduleBtnCard, settingBtn, settingBtnCard,
          startGuideline, topBarGuideline, topGuideline, topHalfGuideline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
